<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on Hov&#39;s Blog</title>
    <link>https://HauyuChen.github.io/tags/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on Hov&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://HauyuChen.github.io/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>并发控制（乐观锁、悲观锁）</title>
      <link>https://HauyuChen.github.io/post/concurrence_pe_op/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/concurrence_pe_op/</guid>
      <description>版权声明：本文由 Hov 所有，发布于 http://chenhy.com ，转载请注明出处。 0 前言 乐观锁、悲观锁是人们定义出来的概念，可认为是一种思想。也就是说其不依赖于某个特定的数</description>
    </item>
    
    <item>
      <title>SQL优化</title>
      <link>https://HauyuChen.github.io/post/sql_optimization/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/sql_optimization/</guid>
      <description>SQL 语句优化 尽量选择较小的列； 将 where 中用的比较频繁的字段建立索引； select 子句中避免使用‘ * ’； 避免在索引列上使用运算符、 not 、 in 、 &amp;lt; 、 &amp;gt; 等操作； 当只需</description>
    </item>
    
    <item>
      <title>谈谈全文检索</title>
      <link>https://HauyuChen.github.io/post/basic_full_text_search/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/basic_full_text_search/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谈谈向上转型、向下转型</title>
      <link>https://HauyuChen.github.io/post/java_-polymorphism_1/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_-polymorphism_1/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 进程通信（共享内存）</title>
      <link>https://HauyuChen.github.io/post/java_ipc/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_ipc/</guid>
      <description>0 写在前面 说到进程通信，我们很轻易就能想到经典的 Socket 通信。但像 Socket 这样的网络通信会增加额外的网络负担，同时也增加了一定的代码量。 共享内存方式是实</description>
    </item>
    
    <item>
      <title>重写、重载的区别</title>
      <link>https://HauyuChen.github.io/post/java_overload_override/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_overload_override/</guid>
      <description>0 写在前面 重写和重载是面向对象程序设计中十分重要的两个概念，其中重写又称为覆盖。 通俗的理解就是，重写就是将一个方法的实现过程再写一遍，覆盖原</description>
    </item>
    
    <item>
      <title>谈谈 Java IO</title>
      <link>https://HauyuChen.github.io/post/java_io/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_io/</guid>
      <description>版权声明：本文由 Hov 所有，发布于 http://chenhy.com ，转载请注明出处。 0 写在前面 IO 操作是任何编程语言都无法回避的问题，因为 IO 操作是机器获取和交换信息的主要途径。</description>
    </item>
    
    <item>
      <title>抽象类与接口的区别</title>
      <link>https://HauyuChen.github.io/post/java_abstractclass_interface/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_abstractclass_interface/</guid>
      <description>0 写在前面 抽象类和接口有共同点，也有不同点。在实际应用中，我们有时会不知道什么时候用抽象类，什么时候用接口。因此，我们有必要了解抽象类和接口</description>
    </item>
    
    <item>
      <title>String相关特性</title>
      <link>https://HauyuChen.github.io/post/java_string/</link>
      <pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_string/</guid>
      <description>1 字符串实例化两种方式的区别 String 的实例化方式有两种，一种是直接赋值，另一种是通过 new 关键字实例化字符串。 1.1 直接赋值 String str1 = &amp;quot;hello&amp;quot;; 使用直接赋值方式，只要</description>
    </item>
    
    <item>
      <title>Java关键字this、super、static、final</title>
      <link>https://HauyuChen.github.io/post/java_thissuperstaticfinal/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_thissuperstaticfinal/</guid>
      <description>0 写在前面 本文主要讲讲 Java 中比较常见的关键字，如 this 、 super 、 static 、 final ，它们在程序中出现频率较高。 1 this 表示类中的属性，比如 this.username = username; 强调调用的是本类的方法</description>
    </item>
    
    <item>
      <title>Java相关特性</title>
      <link>https://HauyuChen.github.io/post/java_trap/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/java_trap/</guid>
      <description>Java备忘 float 和 double 不能进行精确运算，因为计算机不能表示所有的小数，采用 BigDecimal 来解决（String）。 switch 语句不能作用在 long 和 String 上。 true 、 false 、 null 不是严格</description>
    </item>
    
    <item>
      <title>代码调试基本操作</title>
      <link>https://HauyuChen.github.io/post/basic_debug/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/basic_debug/</guid>
      <description>0 写在前面 Debug 是程序员必备的技能。当我们自己写的程序出现异常，我们可以通过 Debug 模式去分析异常。再者，现如今开源代码层出不穷，作者最近正好在研究开</description>
    </item>
    
    <item>
      <title>Eclipse常用快捷键</title>
      <link>https://HauyuChen.github.io/post/eclipse_hotkeys/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://HauyuChen.github.io/post/eclipse_hotkeys/</guid>
      <description>Hov：本文记录了一些Eclipse快捷键，其中“必记级别”真的很好用，一定要记住~~ 必记级别 Ctrl+1：快速修复，代码红色下划线用它就对</description>
    </item>
    
  </channel>
</rss>